class Solution {
public:
    int sumByD(vector<int>& arr, int d) {
        int n=arr.size();
        int sum =0;
        for (int i=0;i<n;i++){
            sum +=ceil((double) arr[i]/(double) d);

            

        }
        return sum ;
        
    }
    int smallestDivisor(vector<int>& arr,int threshold) {
        int n =arr.size();
        int low=1; 
        
       int  high=*max_element(arr.begin(),arr.end());
        int ans =high;
        while(low<=high){
            int mid = low + (high - low)/2;
            if(sumByD(arr,mid)<=threshold){
                 ans =mid;
                high=mid-1;
            }
            else{
                low=mid+1;
            }
            
        }
       
        return ans;
        }


};
